# KB Mood Financial Diary - Docker Compose (PRD Implementation)
# Environment-aware configuration with Infisical integration

services:
  # Infisical Secret Management Service
  infisical-db:
    image: postgres:14-alpine
    container_name: mood-diary-infisical-db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${INFISICAL_DB_PASSWORD:-infisical}
      POSTGRES_USER: ${INFISICAL_DB_USER:-infisical}
      POSTGRES_DB: ${INFISICAL_DB_NAME:-infisical}
    volumes:
      - infisical_postgres_data:/var/lib/postgresql/data
    networks:
      - mood-diary-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${INFISICAL_DB_USER:-infisical}"]
      interval: 10s
      timeout: 5s
      retries: 5

  infisical-redis:
    image: redis:7-alpine
    container_name: mood-diary-infisical-redis
    restart: unless-stopped
    volumes:
      - infisical_redis_data:/data
    networks:
      - mood-diary-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  infisical:
    image: infisical/infisical:latest
    container_name: mood-diary-infisical
    restart: unless-stopped
    depends_on:
      infisical-db:
        condition: service_healthy
      infisical-redis:
        condition: service_healthy
    environment:
      ENCRYPTION_KEY: ${INFISICAL_ENCRYPTION_KEY:-6c1fe4e407b8911c104518103505b218}
      AUTH_SECRET: ${INFISICAL_AUTH_SECRET:-5lrMXKKWCVocS/uerPsl7V+TX/aaUaI7iDkgl3tSmLE=}
      DB_CONNECTION_URI: postgres://${INFISICAL_DB_USER:-infisical}:${INFISICAL_DB_PASSWORD:-infisical}@infisical-db:5432/${INFISICAL_DB_NAME:-infisical}
      REDIS_URL: redis://infisical-redis:6379
      SITE_URL: ${INFISICAL_SITE_URL:-http://localhost:8222}
      TELEMETRY_ENABLED: false
    ports:
      - "${INFISICAL_PORT:-8222}:8080"
    networks:
      - mood-diary-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    image: mariadb:10.11
    container_name: mood-diary-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-mood_diary}
      MYSQL_USER: ${DB_USER:-mood_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-mood_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/init:/docker-entrypoint-initdb.d
    networks:
      - mood-diary-network

  redis:
    image: redis:7-alpine
    container_name: mood-diary-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - mood-diary-network

  backend:
    build:
      context: ./backend-main
      dockerfile: Dockerfile
    container_name: mood-diary-backend
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      infisical:
        condition: service_healthy
    environment:
      # Environment Configuration
      ENV: ${ENV:-development}
      SPRING_PROFILES_ACTIVE: ${ENV:-development}
      
      # Infisical Configuration (Primary)
      INFISICAL_ENABLED: ${INFISICAL_ENABLED:-true}
      INFISICAL_HOST: ${INFISICAL_HOST:-http://infisical:8080}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
      INFISICAL_TOKEN: ${INFISICAL_BACKEND_TOKEN}
      INFISICAL_ENVIRONMENT: ${ENV:-development}
      
      # Application Settings (Non-sensitive)
      SERVER_PORT: ${SERVER_PORT:-8090}
      APP_NAME: ${APP_NAME:-MoodDiary}
      
      # Note: All sensitive secrets (DB passwords, JWT secrets, OAuth credentials)
      # are now loaded from Infisical via InfisicalConfig class
      # Only non-sensitive configuration remains here
    ports:
      - "${BACKEND_PORT:-8090}:8090"
    networks:
      - mood-diary-network
    env_file:
      - .env.${ENV:-development}.infisical
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Environment Configuration
        ENV: ${ENV:-development}
        
        # Infisical Configuration (Primary)
        VITE_INFISICAL_ENABLED: ${INFISICAL_ENABLED:-true}
        VITE_INFISICAL_HOST: ${INFISICAL_HOST:-http://infisical:8080}
        VITE_INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
        VITE_INFISICAL_TOKEN: ${INFISICAL_FRONTEND_TOKEN}
        VITE_INFISICAL_ENVIRONMENT: ${ENV:-development}
        
        # API Configuration (Non-sensitive)
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8090}
        VITE_APP_TITLE: ${VITE_APP_TITLE:-KB 감정 다이어리}
        VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0}
        
        # Note: All sensitive API keys and OAuth credentials
        # are now loaded from Infisical via EnvironmentManager
    container_name: mood-diary-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      infisical:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - mood-diary-network
    env_file:
      - .env.${ENV:-development}.infisical
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: mood-diary-nginx
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - "${NGINX_PORT:-8080}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - mood-diary-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  # Application Data
  mariadb_data:
    driver: local
  redis_data:
    driver: local
    
  # Infisical Data
  infisical_postgres_data:
    driver: local
  infisical_redis_data:
    driver: local
    
  # SSL Certificates (if needed)
  ssl_certs:
    driver: local

networks:
  mood-diary-network:
    driver: bridge
    name: mood-diary-network
    ipam:
      config:
        - subnet: 172.20.0.0/16